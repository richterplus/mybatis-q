<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.mybatisq.mapper.DepartmentMapper">
    <resultMap type="com.github.mybatisq.entity.Department" id="department">
        <id column="dept_id" property="deptId"/>
        <result column="dept_no" property="deptNo"/>
        <result column="dept_name" property="deptName"/>
        <result column="create_date" property="createDate"/>
    </resultMap>

    <select id="count" parameterType="com.github.mybatisq.mapper.core.Query" resultType="java.lang.Integer">
        select count(*) <include refid="com.github.mybatisq.mapper.core.BaseMapper.countFrom"/>
    </select>

    <select id="select" parameterType="com.github.mybatisq.mapper.core.Query" resultMap="department">
        select <if test="selectedColumns.size > 0"><foreach collection="selectedColumns" item="col" separator=",">${tableAlias}.${col.name}</foreach></if><if test="selectedColumns.size == 0">${tableAlias}.dept_id,${tableAlias}.dept_no,${tableAlias}.dept_name,${tableAlias}.create_date</if> <include refid="com.github.mybatisq.mapper.core.BaseMapper.selectFrom"/>
    </select>

    <insert id="insert" parameterType="com.github.mybatisq.entity.Department" useGeneratedKeys="true" keyProperty="deptId">
        <trim prefix="insert into department (" suffix=")" suffixOverrides=",">
            dept_id,
            dept_no,
            dept_name,
            create_date,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{deptId},
            #{deptNo},
            #{deptName},
            #{createDate},
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="com.github.mybatisq.entity.Department" useGeneratedKeys="true" keyProperty="deptId">
        <trim prefix="insert into department (" suffix=")" suffixOverrides=",">
            <if test="deptNo != null">dept_no,</if>
            <if test="deptName != null">dept_name,</if>
            <if test="createDate != null">create_date,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptNo != null">#{deptNo},</if>
            <if test="deptName != null">#{deptName},</if>
            <if test="createDate != null">#{createDate},</if>
        </trim>
    </insert>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="deptId">
        <trim prefix="insert into department (dept_no,dept_name,create_date) values ">
            <foreach collection="list" item="item" separator=",">
                (#{item.deptNo},#{item.deptName},#{item.createDate})
            </foreach>
        </trim>
    </insert>

    <update id="update" parameterType="com.github.mybatisq.entity.Department">
        <trim prefix="update department set" suffix="where dept_id=#{deptId}" suffixOverrides=",">
            dept_no=#{deptNo},
            dept_name=#{deptName},
            create_date=#{createDate},
        </trim>
    </update>

    <update id="updateSelective" parameterType="com.github.mybatisq.entity.Department">
        <trim prefix="update department set" suffix="where dept_id=#{deptId}" suffixOverrides=",">
            <if test="deptNo != null">dept_no=#{deptNo},</if>
            <if test="deptName != null">dept_name=#{deptName},</if>
            <if test="createDate != null">create_date=#{createDate},</if>
        </trim>
    </update>

    <update id="batchUpdate">
        <trim prefix="update department set" suffixOverrides=",">
            <foreach collection="entityList" item="item" open="dept_no=case dept_id " close=" end," separator=" ">when #{item.deptId} then #{deptNo}</foreach>
            <foreach collection="entityList" item="item" open="dept_name=case dept_id " close=" end," separator=" ">when #{item.deptId} then #{deptName}</foreach>
            <foreach collection="entityList" item="item" open="create_date=case dept_id " close=" end," separator=" ">when #{item.deptId} then #{createDate}</foreach>
        </trim>
        <foreach collection="list" item="item" open="where dept_id in (" close=")" separator=",">#{item.deptId}</foreach>
    </update>

    <update id="updateByBuilder" parameterType="com.github.mybatisq.mapper.core.Update">
        <trim prefix="update department">
            <include refid="com.github.mybatisq.mapper.BaseMapper.updateBuilder"/>
        </trim>
    </update>

    <delete id="delete">
        delete from department where dept_id=#{deptId}
    </delete>

    <delete id="batchDelete">
        <trim prefix="delete from department where dept_id in (" suffix=")"><foreach collection="deptIdList" separator="," item="item">#{item}</foreach></trim>
    </delete>

    <delete id="deleteByQuery" parameterType="com.github.mybatisq.mapper.core.DeleteQuery">
        <trim prefix="delete from department"><include refid="com.github.mybatisq.mapper.BaseMapper.deleteWhere"/></trim>
    </delete>
</mapper>