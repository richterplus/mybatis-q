<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.mybatisq.mapper.EmployeeMapper">
    <resultMap type="com.github.mybatisq.entity.Employee" id="employee">
        <id column="emp_id" property="empId"/>
        <result column="emp_no" property="empNo"/>
        <result column="emp_name" property="empName"/>
        <result column="is_fulltime" property="isFulltime"/>
        <result column="serial_no" property="serialNo"/>
        <result column="gender" property="gender"/>
        <result column="birthday" property="birthday"/>
        <result column="height" property="height"/>
        <result column="weight" property="weight"/>
        <result column="salary" property="salary"/>
        <result column="create_date" property="createDate"/>
    </resultMap>

    <select id="count" parameterType="com.github.mybatisq.Query" resultType="java.lang.Integer">
        select count(*) <include refid="com.github.mybatisq.mapper.QMapper.countFrom"/>
    </select>

    <select id="select" parameterType="com.github.mybatisq.Query" resultMap="employee">
        select <if test="selectedColumns.size > 0"><foreach collection="selectedColumns" item="col" separator=",">${tableAlias}.`${col.name}`</foreach></if><if test="selectedColumns.size == 0">${tableAlias}.`emp_id`,${tableAlias}.`emp_no`,${tableAlias}.`emp_name`,${tableAlias}.`is_fulltime`,${tableAlias}.`serial_no`,${tableAlias}.`gender`,${tableAlias}.`birthday`,${tableAlias}.`height`,${tableAlias}.`weight`,${tableAlias}.`salary`,${tableAlias}.`create_date`</if> <include refid="com.github.mybatisq.mapper.QMapper.selectFrom"/>
    </select>

    <insert id="insert" parameterType="com.github.mybatisq.entity.Employee" useGeneratedKeys="true" keyProperty="empId">
        <trim prefix="insert `employee` (" suffix=")" suffixOverrides=",">
            <if test="empId != null">`emp_id`,</if>
            <if test="empNo != null">`emp_no`,</if>
            <if test="empName != null">`emp_name`,</if>
            <if test="isFulltime != null">`is_fulltime`,</if>
            <if test="serialNo != null">`serial_no`,</if>
            <if test="gender != null">`gender`,</if>
            <if test="birthday != null">`birthday`,</if>
            <if test="height != null">`height`,</if>
            <if test="weight != null">`weight`,</if>
            <if test="salary != null">`salary`,</if>
            <if test="createDate != null">`create_date`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empId != null">#{empId},</if>
            <if test="empNo != null">#{empNo},</if>
            <if test="empName != null">#{empName},</if>
            <if test="isFulltime != null">#{isFulltime},</if>
            <if test="serialNo != null">#{serialNo},</if>
            <if test="gender != null">#{gender},</if>
            <if test="birthday != null">#{birthday},</if>
            <if test="height != null">#{height},</if>
            <if test="weight != null">#{weight},</if>
            <if test="salary != null">#{salary},</if>
            <if test="createDate != null">#{createDate},</if>
        </trim>
    </insert>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="empId">
        <trim prefix="insert `employee` (`emp_no`,`emp_name`,`is_fulltime`,`serial_no`,`gender`,`birthday`,`height`,`weight`,`salary`,`create_date`) values ">
            <foreach collection="list" item="item" separator=",">
                (#{item.empNo},#{item.empName},#{item.isFulltime},#{item.serialNo},#{item.gender},#{item.birthday},#{item.height},#{item.weight},#{item.salary},#{item.createDate})
            </foreach>
        </trim>
    </insert>

    <update id="update" parameterType="com.github.mybatisq.entity.Employee">
        <trim prefix="update `employee` set" suffix="where `emp_id`=#{empId}" suffixOverrides=",">
            <if test="empNo != null">`emp_no`=#{empNo},</if>
            <if test="empName != null">`emp_name`=#{empName},</if>
            <if test="isFulltime != null">`is_fulltime`=#{isFulltime},</if>
            <if test="serialNo != null">`serial_no`=#{serialNo},</if>
            <if test="gender != null">`gender`=#{gender},</if>
            <if test="birthday != null">`birthday`=#{birthday},</if>
            <if test="height != null">`height`=#{height},</if>
            <if test="weight != null">`weight`=#{weight},</if>
            <if test="salary != null">`salary`=#{salary},</if>
            <if test="createDate != null">`create_date`=#{createDate},</if>
        </trim>
    </update>

    <update id="batchUpdate">
        <trim prefix="update `employee` set" suffixOverrides=",">
            <foreach collection="list" item="item" open="`emp_no`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.empNo}</foreach>
            <foreach collection="list" item="item" open="`emp_name`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.empName}</foreach>
            <foreach collection="list" item="item" open="`is_fulltime`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.isFulltime}</foreach>
            <foreach collection="list" item="item" open="`serial_no`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.serialNo}</foreach>
            <foreach collection="list" item="item" open="`gender`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.gender}</foreach>
            <foreach collection="list" item="item" open="`birthday`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.birthday}</foreach>
            <foreach collection="list" item="item" open="`height`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.height}</foreach>
            <foreach collection="list" item="item" open="`weight`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.weight}</foreach>
            <foreach collection="list" item="item" open="`salary`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.salary}</foreach>
            <foreach collection="list" item="item" open="`create_date`=case `emp_id` " close=" end," separator=" ">when #{item.empId} then #{item.createDate}</foreach>
        </trim>
        <foreach collection="list" item="item" open="where `emp_id` in (" close=")" separator=",">#{item.empId}</foreach>
    </update>

    <delete id="delete">
        delete from `employee` where emp_id=#{empId}
    </delete>

    <delete id="batchDelete">
        <trim prefix="delete from `employee` where `emp_id` in (" suffix=")"><foreach collection="empIdList" separator="," item="item">#{item}</foreach></trim>
    </delete>

    <delete id="deleteByQuery" parameterType="com.github.mybatisq.DeleteQuery">
        <trim prefix="delete from `employee`"><include refid="com.github.mybatisq.mapper.QMapper.deleteWhere"/></trim>
    </delete>
</mapper>