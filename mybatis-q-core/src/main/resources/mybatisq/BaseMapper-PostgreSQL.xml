<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.mybatisq.BaseMapper">
    <sql id="from">from "${tableName}" "${tableAlias}"</sql>
    <sql id="join">
        <foreach collection="joins" item="j" separator=" ">
            ${j.type} join "${j.tableName2}" "${j.tableAlias2}"
            <foreach collection="j.ons" item="o" open="on " separator=" and ">
                <if test="o.operator == 'eq'">${j.tableAlias1}.${o.columnName1}="${j.tableAlias2}"."${o.columnName2}"</if>
            </foreach>
            <foreach collection="j.wheres" item="w" open="and " separator=" and ">
                <if test="w.operator == 'eq'">"${j.tableAlias2}"."${w.columnName}"=#{w.queryValue}</if>
                <if test="w.operator == 'eqCol'">"${j.tableAlias2}"."${w.columnName}"="${j.tableAlias2}"."${w.queryValue.name}"</if>
                <if test="w.operator == 'gt'">"${j.tableAlias2}"."${w.columnName}"&gt;#{w.queryValue}</if>
                <if test="w.operator == 'ge'">"${j.tableAlias2}"."${w.columnName}"&gt;=#{w.queryValue}</if>
                <if test="w.operator == 'lt'">"${j.tableAlias2}"."${w.columnName}"&lt;#{w.queryValue}</if>
                <if test="w.operator == 'le'">"${j.tableAlias2}"."${w.columnName}"&lt;=#{w.queryValue}</if>
                <if test="w.operator == 'between'">"${j.tableAlias2}"."${w.columnName}" between #{w.queryValue} and #{w.queryValue2}</if>
                <if test="w.operator == 'in'">"${j.tableAlias2}"."${w.columnName}" in<foreach collection="w.queryValue" item="val" open=" (" close=")" separator=",">#{val}</foreach></if>
                <if test="w.operator == 'notIn'">"${j.tableAlias2}"."${w.columnName}" not in<foreach collection="w.queryValue" item="val" open=" (" close=")" separator=",">#{val}</foreach></if>
                <if test="w.operator == 'startWith'">"${j.tableAlias2}"."${w.columnName}" like #{w.queryValue}</if>
                <if test="w.operator == 'endWith'">"${j.tableAlias2}"."${w.columnName}" like #{w.queryValue}</if>
                <if test="w.operator == 'contains'">"${j.tableAlias2}"."${w.columnName}" like #{w.queryValue}</if>
                <if test="w.operator == 'isNull'">"${j.tableAlias2}"."${w.columnName}" is null</if>
                <if test="w.operator == 'notNull'">"${j.tableAlias2}"."${w.columnName}" is not null</if>
            </foreach>
        </foreach>
    </sql>
    <sql id="where">
        <foreach collection="wheres" item="w" open="where " separator=" and ">
            <if test="w.operator == 'eq'">"${tableAlias}"."${w.columnName}"=#{w.queryValue}</if>
            <if test="w.operator == 'eqCol'">"${tableAlias}"."${w.columnName}"="${tableAlias}"."${w.queryValue.name}"</if>
            <if test="w.operator == 'gt'">"${tableAlias}"."${w.columnName}"&gt;#{w.queryValue}</if>
            <if test="w.operator == 'ge'">"${tableAlias}"."${w.columnName}"&gt;=#{w.queryValue}</if>
            <if test="w.operator == 'lt'">"${tableAlias}"."${w.columnName}"&lt;#{w.queryValue}</if>
            <if test="w.operator == 'le'">"${tableAlias}"."${w.columnName}"&lt;=#{w.queryValue}</if>
            <if test="w.operator == 'between'">"${tableAlias}"."${w.columnName}" between #{w.queryValue} and #{w.queryValue2}</if>
            <if test="w.operator == 'in'">"${tableAlias}"."${w.columnName}" in<foreach collection="w.queryValue" item="val" open=" (" close=")" separator=",">#{val}</foreach></if>
            <if test="w.operator == 'notIn'">"${tableAlias}"."${w.columnName}" not in<foreach collection="w.queryValue" item="val" open=" (" close=")" separator=",">#{val}</foreach></if>
            <if test="w.operator == 'startWith'">"${tableAlias}"."${w.columnName}" like #{w.queryValue}</if>
            <if test="w.operator == 'endWith'">"${tableAlias}"."${w.columnName}" like #{w.queryValue}</if>
            <if test="w.operator == 'contains'">"${tableAlias}"."${w.columnName}" like #{w.queryValue}</if>
            <if test="w.operator == 'isNull'">"${tableAlias}"."${w.columnName}" is null</if>
            <if test="w.operator == 'notNull'">"${tableAlias}"."${w.columnName}" is not null</if>
        </foreach>
    </sql>
    <sql id="deleteWhere">
        <foreach collection="wheres" item="w" open="where " separator=" and ">
            <if test="w.operator == 'eq'">"${w.columnName}"=#{w.queryValue}</if>
            <if test="w.operator == 'eqCol'">"${w.columnName}"="${w.queryValue.name}"</if>
            <if test="w.operator == 'gt'">"${w.columnName}"&gt;#{w.queryValue}</if>
            <if test="w.operator == 'ge'">"${w.columnName}"&gt;=#{w.queryValue}</if>
            <if test="w.operator == 'lt'">"${w.columnName}"&lt;#{w.queryValue}</if>
            <if test="w.operator == 'le'">"${w.columnName}"&lt;=#{w.queryValue}</if>
            <if test="w.operator == 'between'">"${w.columnName}" between #{w.queryValue} and #{w.queryValue2}</if>
            <if test="w.operator == 'in'">"${w.columnName}" in<foreach collection="w.queryValue" item="val" open=" (" close=")" separator=",">#{val}</foreach></if>
            <if test="w.operator == 'notIn'">"${w.columnName}" not in<foreach collection="w.queryValue" item="val" open=" (" close=")" separator=",">#{val}</foreach></if>
            <if test="w.operator == 'startWith'">"${w.columnName}" like #{w.queryValue}</if>
            <if test="w.operator == 'endWith'">"${w.columnName}" like #{w.queryValue}</if>
            <if test="w.operator == 'contains'">"${w.columnName}" like #{w.queryValue}</if>
            <if test="w.operator == 'isNull'">"${w.columnName}" is null</if>
            <if test="w.operator == 'notNull'">"${w.columnName}" is not null</if>
        </foreach>
    </sql>
    <sql id="setter">
        <foreach collection="setters" item="s" open="set " separator=",">
            <if test="s.operator == 'eq'">"${s.columnName}"=#{s.value}</if>
            <if test="s.operator == 'plus'">"${s.columnName}"="${s.columnName}"+#{s.value}</if>
        </foreach>
    </sql>
    <sql id="orderBy">
        <foreach collection="orderBys" open="order by " separator="," item="o">
            "${tableAlias}"."${o.columnName}" ${o.direction}
        </foreach>
    </sql>
    <sql id="limit">
        <if test="limit != null">limit ${limit}</if>
        <if test="skip != null">offset ${skip}</if>
    </sql>
    <sql id="countFrom">
        <include refid="com.github.mybatisq.BaseMapper.from"/>
        <include refid="com.github.mybatisq.BaseMapper.join"/>
        <include refid="com.github.mybatisq.BaseMapper.where"/>
    </sql>
    <sql id="selectFrom">
        <include refid="com.github.mybatisq.BaseMapper.from"/>
        <include refid="com.github.mybatisq.BaseMapper.join"/>
        <include refid="com.github.mybatisq.BaseMapper.where"/>
        <include refid="com.github.mybatisq.BaseMapper.orderBy"/>
        <include refid="com.github.mybatisq.BaseMapper.limit"/>
    </sql>
    <sql id="updateBuilder">
        <include refid="com.github.mybatisq.BaseMapper.setter"/>
        <include refid="com.github.mybatisq.BaseMapper.deleteWhere"/>
    </sql>
</mapper>